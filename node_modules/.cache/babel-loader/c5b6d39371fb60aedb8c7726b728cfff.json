{"ast":null,"code":"import _classCallCheck from \"/Users/johngregorio/Desktop/Rutgers_Coding_Bootcamp/GitHub/Homework/week-19/Click-Game/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/johngregorio/Desktop/Rutgers_Coding_Bootcamp/GitHub/Homework/week-19/Click-Game/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/johngregorio/Desktop/Rutgers_Coding_Bootcamp/GitHub/Homework/week-19/Click-Game/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/johngregorio/Desktop/Rutgers_Coding_Bootcamp/GitHub/Homework/week-19/Click-Game/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/johngregorio/Desktop/Rutgers_Coding_Bootcamp/GitHub/Homework/week-19/Click-Game/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/johngregorio/Desktop/Rutgers_Coding_Bootcamp/GitHub/Homework/week-19/Click-Game/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport ClickCard from \"./components/ClickCard\";\nimport Wrapper from \"./components/Wrapper/index.js\";\nimport './App.css';\n\nvar cards = require(\"./clickCards.json\");\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      clickCards: cards,\n      currentScore: 0,\n      topScore: 0\n    };\n\n    _this.handleCardClick = function (id) {\n      var guessedCorrectly = false; // const cardClicked = this.state.smashList.find(fighter => fighter.id === id)\n\n      var updatedSmashList = _this.state.smashList.map(function (fighter) {\n        // check id when clicked\n        if (fighter.id === id) {\n          // if the fighter wasn't clicked\n          if (!fighter.clicked) {\n            fighter.clicked = true;\n            guessedCorrectly = true;\n          }\n        }\n\n        return fighter;\n      });\n\n      guessedCorrectly ? _this.handleCorrectGuess(updatedSmashList) : _this.handleIncorrectGuess(updatedSmashList);\n    };\n\n    _this.shuffleFighters = function (smashList) {\n      return smashList.sort(function () {\n        return .5 - Math.random();\n      });\n    };\n\n    _this.handleCorrectGuess = function (smashList) {\n      var _this$state = _this.state,\n          currentScore = _this$state.currentScore,\n          topScore = _this$state.topScore;\n      var newScore = currentScore + 1;\n      var newTopScore = newScore > topScore ? newScore : topScore;\n\n      _this.setState({\n        smashList: _this.shuffleFighters(smashList),\n        currentScore: newScore,\n        topScore: newTopScore\n      });\n    };\n\n    _this.handleIncorrectGuess = function (smashList) {\n      var resetSmashList = smashList.map(function (fighter) {\n        fighter.clicked = false;\n        return fighter;\n      });\n\n      _this.setState({\n        smashList: _this.shuffleFighters(resetSmashList),\n        currentScore: 0\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.clickCards);\n      return React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Click Card\"), // this.state.cards.length !== 0 ? \n      this.state.clickCards.map(function (cards) {\n        return React.createElement(ClickCard, {\n          key: cards.id,\n          name: cards.name,\n          image: cards.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        });\n      }) //  :\"\"\n      , \";\");\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/johngregorio/Desktop/Rutgers_Coding_Bootcamp/GitHub/Homework/week-19/Click-Game/my-app/src/App.js"],"names":["React","Component","ClickCard","Wrapper","cards","require","App","state","clickCards","currentScore","topScore","handleCardClick","id","guessedCorrectly","updatedSmashList","smashList","map","fighter","clicked","handleCorrectGuess","handleIncorrectGuess","shuffleFighters","sort","Math","random","newScore","newTopScore","setState","resetSmashList","console","log","name","image"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ClickCard from \"./components/ClickCard\";\nimport Wrapper from \"./components/Wrapper/index.js\";\nimport './App.css';\n\nconst cards = require(\"./clickCards.json\");\n\nclass App extends Component {\n  \n    state = {\n      clickCards: cards,\n      currentScore: 0,\n      topScore: 0\n    }\n\n    handleCardClick = (id) => {\n      let guessedCorrectly = false;\n\n      // const cardClicked = this.state.smashList.find(fighter => fighter.id === id)\n      const updatedSmashList = this.state.smashList.map(fighter =>\n        {\n          // check id when clicked\n          if (fighter.id === id) {\n            // if the fighter wasn't clicked\n            if(!fighter.clicked) {\n              fighter.clicked = true;\n              guessedCorrectly = true;\n            }\n          }\n\n          return fighter\n          \n        });\n        \n        (guessedCorrectly) ?\n          this.handleCorrectGuess(updatedSmashList) :\n          this.handleIncorrectGuess(updatedSmashList)\n        }\n\n        shuffleFighters = (smashList) => smashList.sort(() => .5 - \n        Math.random());\n\n        handleCorrectGuess = (smashList) => {\n          const {currentScore, topScore} = this.state;\n\n          const newScore = currentScore + 1;\n\n          const newTopScore = (newScore > topScore) ? newScore :\n          topScore;\n\n          this.setState({\n            smashList: this.shuffleFighters(smashList),\n            currentScore: newScore,\n            topScore: newTopScore,\n          })\n        }\n\n      handleIncorrectGuess = (smashList) => {\n        const resetSmashList = smashList.map(fighter => {\n          fighter.clicked = false;\n          return fighter;\n        })\n\n        this.setState({\n          smashList: this.shuffleFighters(resetSmashList),\n          currentScore: 0\n        })\n      }\n\n    render() {\n    console.log(this.state.clickCards);\n    return (\n      <Wrapper>\n       <h1 className=\"title\">Click Card</h1>\n       {\n         // this.state.cards.length !== 0 ? \n         this.state.clickCards.map(cards => {\n           return (\n           <ClickCard\n           key={cards.id}\n           name={cards.name}\n           image={cards.image}\n          />\n         )\n       })\n      //  :\"\"\n       };\n       \n    </Wrapper>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}