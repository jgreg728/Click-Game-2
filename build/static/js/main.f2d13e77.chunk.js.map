{"version":3,"sources":["components/ClickCard/index.js","components/Wrapper/index.js","components/Header/header.js","App.js","index.js"],"names":["ClickCard","props","react_default","a","createElement","className","alt","name","src","image","onClick","clickedCard","id","Wrapper","children","Header","fighter","require","App","state","smashList","currentScore","topScore","handleCardClick","console","log","guessedCorrectly","updatedSmashList","_this","map","clicked","handleCorrectGuess","handleIncorrectGuess","shuffleFighters","sort","Math","random","_this$state","newScore","newTopScore","setState","resetSmashList","alert","shuffle","j","x","i","length","floor","fighterArray","this","shuffledArray","_this2","header","components_Wrapper","components_ClickCard","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.f2d13e77.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction ClickCard(props) {\n  return (\n    <div className=\"card\">\n      <img alt={props.name} src={props.image}\n        onClick={() => {\n          props.clickedCard(props.id)\n        }}\n      />\n\n      <div className=\"content\">\n        <strong>{props.name}</strong>\n      </div>\n    </div>\n  );\n}\n\nexport default ClickCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Header(props) {\n  return (\n    <div className=\"header\">\n    {props.children}\n    </div>\n  );\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport ClickCard from \"./components/ClickCard\";\nimport Wrapper from \"./components/Wrapper/index.js\";\nimport Header from \"./components/Header/header.js\";\nimport './App.css';\n\nconst fighter = require(\"./clickCards.json\");\n\nclass App extends Component {\n  \n    state = {\n      smashList: fighter,\n      currentScore: 0,\n      topScore: 0\n    }\n\n    handleCardClick = (id) => {\n      console.log(\"handleCardClick\")\n      let guessedCorrectly = false;\n\n      // const cardClicked = this.state.smashList.find(fighter => fighter.id === id)\n      const updatedSmashList = this.state.smashList.map(fighter =>\n        {\n          // check id when clicked\n          if (fighter.id === id) {\n            // if the fighter wasn't clicked\n            if(!fighter.clicked) {\n              fighter.clicked = true;\n              guessedCorrectly = true;\n            }\n          }\n\n          return fighter\n          \n        });\n        \n        (guessedCorrectly) ?\n          this.handleCorrectGuess(updatedSmashList) :\n          this.handleIncorrectGuess(updatedSmashList)\n        }\n\n        shuffleFighters = (smashList) => smashList.sort(() => .5 - \n        Math.random());\n\n    // IF A CLICK IS CORRECT OR WRONG\n      handleCorrectGuess = (smashList) => {\n        const {currentScore, topScore} = this.state;\n\n        const newScore = currentScore + 1;\n\n        const newTopScore = (newScore > topScore) ? newScore :\n        topScore;\n\n        this.setState({\n          smashList: this.shuffleFighters(smashList),\n          currentScore: newScore,\n          topScore: newTopScore,\n        })\n      }\n\n      handleIncorrectGuess = (smashList) => {\n        const resetSmashList = smashList.map(fighter => {\n          fighter.clicked = false;\n          return fighter;\n        })\n\n        alert(\"GAME OVER...\")\n\n        this.setState({\n          smashList: this.shuffleFighters(resetSmashList),\n          currentScore: 0\n        })\n      }  \n      \n   \n\n      // SHUFFLE FIGHTERS PER CLICK\n      componentDidMount() {\n        var fighterArray = this.state.smashList\n        var shuffledArray = this.shuffle(fighterArray)\n\n        this.setState({\n          smashList: shuffledArray\n        })\n      }\n      // SHUFFLE FIGHTERS FUNCTION\n       shuffle = (a) => {\n        var j, x, i;\n        for (i = a.length - 1; i > 0; i--) {\n            j = Math.floor(Math.random() * (i + 1));\n            x = a[i];\n            a[i] = a[j];\n            a[j] = x;\n        }\n        return a;\n    }\n\n    render() {\n    console.log(this.state.smashList);\n    return (\n      <div>\n        <Header>\n          <h1>Super Smash Bros. Ultimate Memory Game</h1>\n          <img className=\"smashLogo\" src=\"/images/smash_logo.png\"></img>\n          <h3 className=\"title\">Keep clicking on fighters without selecting the same one more than once!</h3>\n\n          <h1>Score: {this.state.currentScore} </h1>\n          <h1>Top Score: {this.state.topScore} </h1>\n        </Header>\n\n        <Wrapper>\n       \n        {\n          this.state.smashList.map((fighter, i) => {\n            if (i < 10) {\n            return (\n            <ClickCard\n            key={fighter.id}\n            name={fighter.name}\n            image={fighter.image}\n            id={fighter.id}\n\n            clickedCard={this.handleCardClick}\n            />  \n          )\n        }\n      })\n        \n       }\n    </Wrapper>\n      </div>\n      \n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}